// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper)
public final class XamlBindingHelper : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Markup.IXamlBindingHelper
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlBindingHelper
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _IXamlBindingHelperStatics: __ABI_Microsoft_UI_Xaml_Markup.IXamlBindingHelperStatics = try! RoGetActivationFactory("Microsoft.UI.Xaml.Markup.XamlBindingHelper")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.getdatatemplatecomponent)
    public static func getDataTemplateComponent(_ element: WinUI.DependencyObject!) throws -> AnyIDataTemplateComponent! {
        return try _IXamlBindingHelperStatics.GetDataTemplateComponent(element)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setdatatemplatecomponent)
    public static func setDataTemplateComponent(_ element: WinUI.DependencyObject!, _ value: AnyIDataTemplateComponent!) throws {
        try _IXamlBindingHelperStatics.SetDataTemplateComponent(element, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.suspendrendering)
    public static func suspendRendering(_ target: WinUI.UIElement!) throws {
        try _IXamlBindingHelperStatics.SuspendRendering(target)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.resumerendering)
    public static func resumeRendering(_ target: WinUI.UIElement!) throws {
        try _IXamlBindingHelperStatics.ResumeRendering(target)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.convertvalue)
    public static func convertValue(_ type: WinUI.TypeName, _ value: Any!) throws -> Any! {
        return try _IXamlBindingHelperStatics.ConvertValue(type, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromstring)
    public static func setPropertyFromString(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: String) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromString(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromboolean)
    public static func setPropertyFromBoolean(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: Bool) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromBoolean(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromchar16)
    public static func setPropertyFromChar16(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: Character) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromChar16(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromdatetime)
    public static func setPropertyFromDateTime(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: WindowsFoundation.DateTime) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromDateTime(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromdouble)
    public static func setPropertyFromDouble(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: Double) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromDouble(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromint32)
    public static func setPropertyFromInt32(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: Int32) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromInt32(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromuint32)
    public static func setPropertyFromUInt32(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: UInt32) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromUInt32(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromint64)
    public static func setPropertyFromInt64(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: Int64) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromInt64(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromuint64)
    public static func setPropertyFromUInt64(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: UInt64) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromUInt64(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromsingle)
    public static func setPropertyFromSingle(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: Float) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromSingle(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfrompoint)
    public static func setPropertyFromPoint(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: WindowsFoundation.Point) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromPoint(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromrect)
    public static func setPropertyFromRect(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: WindowsFoundation.Rect) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromRect(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromsize)
    public static func setPropertyFromSize(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: WindowsFoundation.Size) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromSize(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromtimespan)
    public static func setPropertyFromTimeSpan(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: WindowsFoundation.TimeSpan) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromTimeSpan(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfrombyte)
    public static func setPropertyFromByte(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: UInt8) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromByte(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromuri)
    public static func setPropertyFromUri(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: WindowsFoundation.Uri!) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromUri(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.setpropertyfromobject)
    public static func setPropertyFromObject(_ dependencyObject: Any!, _ propertyToSet: WinUI.DependencyProperty!, _ value: Any!) throws {
        try _IXamlBindingHelperStatics.SetPropertyFromObject(dependencyObject, propertyToSet, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlbindinghelper.datatemplatecomponentproperty)
    public static var dataTemplateComponentProperty : WinUI.DependencyProperty! {
        get { try! _IXamlBindingHelperStatics.get_DataTemplateComponentProperty() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlreader)
public final class XamlReader : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Markup.IXamlReader
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CMarkup_CIXamlReader
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _IXamlReaderStatics: __ABI_Microsoft_UI_Xaml_Markup.IXamlReaderStatics = try! RoGetActivationFactory("Microsoft.UI.Xaml.Markup.XamlReader")
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlreader.load)
    public static func load(_ xaml: String) throws -> Any! {
        return try _IXamlReaderStatics.Load(xaml)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xamlreader.loadwithinitialtemplatevalidation)
    public static func loadWithInitialTemplateValidation(_ xaml: String) throws -> Any! {
        return try _IXamlReaderStatics.LoadWithInitialTemplateValidation(xaml)
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xmlnsdefinition)
public struct XmlnsDefinition: Hashable, Codable, Sendable {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xmlnsdefinition.xmlnamespace)
    public var xmlNamespace: String = ""
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.xmlnsdefinition.namespace)
    public var namespace: String = ""
    public init() {}
    public init(xmlNamespace: String, namespace: String) {
        self.xmlNamespace = xmlNamespace
        self.namespace = namespace
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.icomponentconnector)
public protocol IComponentConnector : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.icomponentconnector.connect)
    func connect(_ connectionId: Int32, _ target: Any!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.icomponentconnector.getbindingconnector)
    func getBindingConnector(_ connectionId: Int32, _ target: Any!) throws -> WinUI.AnyIComponentConnector!
}

extension IComponentConnector {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Xaml_Markup.IComponentConnectorWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Xaml_Markup.IComponentConnectorWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIComponentConnector = any IComponentConnector

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.idatatemplatecomponent)
public protocol IDataTemplateComponent : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.idatatemplatecomponent.recycle)
    func recycle() throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.idatatemplatecomponent.processbindings)
    func processBindings(_ item: Any!, _ itemIndex: Int32, _ phase: Int32, _ nextPhase: inout Int32) throws
}

extension IDataTemplateComponent {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Xaml_Markup.IDataTemplateComponentWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Xaml_Markup.IDataTemplateComponentWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIDataTemplateComponent = any IDataTemplateComponent

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember)
public protocol IXamlMember : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.getvalue)
    func getValue(_ instance: Any!) throws -> Any!
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.setvalue)
    func setValue(_ instance: Any!, _ value: Any!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.isattachable)
    var isAttachable: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.isdependencyproperty)
    var isDependencyProperty: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.isreadonly)
    var isReadOnly: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.name)
    var name: String { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.targettype)
    var targetType: WinUI.AnyIXamlType! { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmember.type)
    var type: WinUI.AnyIXamlType! { get }
}

extension IXamlMember {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Xaml_Markup.IXamlMemberWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Xaml_Markup.IXamlMemberWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIXamlMember = any IXamlMember

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmetadataprovider)
public protocol IXamlMetadataProvider : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmetadataprovider.getxamltype)
    func getXamlType(_ type: WinUI.TypeName) throws -> WinUI.AnyIXamlType!
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmetadataprovider.getxamltype)
    func getXamlType(_ fullName: String) throws -> WinUI.AnyIXamlType!
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamlmetadataprovider.getxmlnsdefinitions)
    func getXmlnsDefinitions() throws -> [WinUI.XmlnsDefinition]
}

extension IXamlMetadataProvider {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Xaml_Markup.IXamlMetadataProviderWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Xaml_Markup.IXamlMetadataProviderWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIXamlMetadataProvider = any IXamlMetadataProvider

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype)
public protocol IXamlType : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.activateinstance)
    func activateInstance() throws -> Any!
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.createfromstring)
    func createFromString(_ value: String) throws -> Any!
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.getmember)
    func getMember(_ name: String) throws -> WinUI.AnyIXamlMember!
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.addtovector)
    func addToVector(_ instance: Any!, _ value: Any!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.addtomap)
    func addToMap(_ instance: Any!, _ key: Any!, _ value: Any!) throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.runinitializer)
    func runInitializer() throws
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.basetype)
    var baseType: WinUI.AnyIXamlType! { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.boxedtype)
    var boxedType: WinUI.AnyIXamlType! { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.contentproperty)
    var contentProperty: WinUI.AnyIXamlMember! { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.fullname)
    var fullName: String { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.isarray)
    var isArray: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.isbindable)
    var isBindable: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.iscollection)
    var isCollection: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.isconstructible)
    var isConstructible: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.isdictionary)
    var isDictionary: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.ismarkupextension)
    var isMarkupExtension: Bool { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.itemtype)
    var itemType: WinUI.AnyIXamlType! { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.keytype)
    var keyType: WinUI.AnyIXamlType! { get }
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.markup.ixamltype.underlyingtype)
    var underlyingType: WinUI.TypeName { get }
}

extension IXamlType {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Microsoft_UI_Xaml_Markup.IXamlTypeWrapper.IID:
                let wrapper = __ABI_Microsoft_UI_Xaml_Markup.IXamlTypeWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIXamlType = any IXamlType

