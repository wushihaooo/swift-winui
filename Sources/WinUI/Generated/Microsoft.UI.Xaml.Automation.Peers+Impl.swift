// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

@_spi(WinRTInternal)
public enum __IMPL_Microsoft_UI_Xaml_Automation_Peers {
    public enum AutomationPeerBridge: ComposableBridge {
        public typealias SwiftProjection = AutomationPeer
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer>?) -> AutomationPeer? {
            guard let abi = abi else { return nil }
            return UnsealedWinRTClassWrapper<Composable>.unwrapFrom(base: abi)
        }
        public enum IAutomationPeerOverrides : ComposableImpl {
            public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerOverrides
            public typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeerOverrides
            public typealias Class = AutomationPeer
            public typealias SwiftProjection = WinRTClassWeakReference<Class>
            public enum Default : AbiInterface {
                public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer
                public typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Automation_Peers.IAutomationPeer
            }
        }
        @_spi(WinRTInternal)
        public typealias Composable = IAutomationPeerOverrides
    }

    public enum AutomationPeerAnnotationBridge: AbiBridge {
        public typealias SwiftProjection = AutomationPeerAnnotation
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeerAnnotation>?) -> AutomationPeerAnnotation? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
extension RawElementProviderRuntimeId: WinRTBridgeable {
    public typealias ABI = __x_ABI_CMicrosoft_CUI_CXaml_CAutomation_CPeers_CRawElementProviderRuntimeId
    public static func from(abi: ABI) -> Self {
        .init(part1: abi.Part1, part2: abi.Part2)
    }
    public func toABI() -> ABI {
        .from(swift: self)
    }
}

@_spi(WinRTInternal)
public class AutomationPeerMaker: MakeFromAbi {
    public typealias SwiftType = AutomationPeer
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return AutomationPeer(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class AutomationPeerAnnotationMaker: MakeFromAbi {
    public typealias SwiftType = AutomationPeerAnnotation
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return AutomationPeerAnnotation(fromAbi: abi)
    }
}
