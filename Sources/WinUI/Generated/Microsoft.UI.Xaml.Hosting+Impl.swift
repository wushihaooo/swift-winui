// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

@_spi(WinRTInternal)
public enum __IMPL_Microsoft_UI_Xaml_Hosting {
    public enum DesktopWindowXamlSourceBridge: ComposableBridge {
        public typealias SwiftProjection = DesktopWindowXamlSource
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIDesktopWindowXamlSource
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIDesktopWindowXamlSource>?) -> DesktopWindowXamlSource? {
            guard let abi = abi else { return nil }
            return UnsealedWinRTClassWrapper<Composable>.unwrapFrom(base: abi)
        }
        public enum IDesktopWindowXamlSource : ComposableImpl {
            public typealias CABI = C_IInspectable
            public typealias SwiftABI = WindowsFoundation.IInspectable
            public typealias Class = DesktopWindowXamlSource
            public typealias SwiftProjection = WinRTClassWeakReference<Class>
            public enum Default : AbiInterface {
                public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIDesktopWindowXamlSource
                public typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Hosting.IDesktopWindowXamlSource
            }
        }
        @_spi(WinRTInternal)
        public typealias Composable = IDesktopWindowXamlSource
    }

    public enum DesktopWindowXamlSourceGotFocusEventArgsBridge: AbiBridge {
        public typealias SwiftProjection = DesktopWindowXamlSourceGotFocusEventArgs
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIDesktopWindowXamlSourceGotFocusEventArgs
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIDesktopWindowXamlSourceGotFocusEventArgs>?) -> DesktopWindowXamlSourceGotFocusEventArgs? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

    public enum DesktopWindowXamlSourceTakeFocusRequestedEventArgsBridge: AbiBridge {
        public typealias SwiftProjection = DesktopWindowXamlSourceTakeFocusRequestedEventArgs
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIDesktopWindowXamlSourceTakeFocusRequestedEventArgs
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIDesktopWindowXamlSourceTakeFocusRequestedEventArgs>?) -> DesktopWindowXamlSourceTakeFocusRequestedEventArgs? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

    public enum ElementCompositionPreviewBridge: AbiBridge {
        public typealias SwiftProjection = ElementCompositionPreview
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIElementCompositionPreview
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIElementCompositionPreview>?) -> ElementCompositionPreview? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

    public enum WindowsXamlManagerBridge: AbiBridge {
        public typealias SwiftProjection = WindowsXamlManager
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIWindowsXamlManager
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIWindowsXamlManager>?) -> WindowsXamlManager? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

    public enum XamlShutdownCompletedOnThreadEventArgsBridge: AbiBridge {
        public typealias SwiftProjection = XamlShutdownCompletedOnThreadEventArgs
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIXamlShutdownCompletedOnThreadEventArgs
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIXamlShutdownCompletedOnThreadEventArgs>?) -> XamlShutdownCompletedOnThreadEventArgs? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

    public enum XamlSourceFocusNavigationRequestBridge: AbiBridge {
        public typealias SwiftProjection = XamlSourceFocusNavigationRequest
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIXamlSourceFocusNavigationRequest
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIXamlSourceFocusNavigationRequest>?) -> XamlSourceFocusNavigationRequest? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

    public enum XamlSourceFocusNavigationResultBridge: AbiBridge {
        public typealias SwiftProjection = XamlSourceFocusNavigationResult
        public typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIXamlSourceFocusNavigationResult
        public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CHosting_CIXamlSourceFocusNavigationResult>?) -> XamlSourceFocusNavigationResult? {
            guard let abi = abi else { return nil }
            return .init(fromAbi: WindowsFoundation.IInspectable(abi))
        }
    }

}
@_spi(WinRTInternal)
public class DesktopWindowXamlSourceMaker: MakeFromAbi {
    public typealias SwiftType = DesktopWindowXamlSource
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return DesktopWindowXamlSource(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class DesktopWindowXamlSourceGotFocusEventArgsMaker: MakeFromAbi {
    public typealias SwiftType = DesktopWindowXamlSourceGotFocusEventArgs
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return DesktopWindowXamlSourceGotFocusEventArgs(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class DesktopWindowXamlSourceTakeFocusRequestedEventArgsMaker: MakeFromAbi {
    public typealias SwiftType = DesktopWindowXamlSourceTakeFocusRequestedEventArgs
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return DesktopWindowXamlSourceTakeFocusRequestedEventArgs(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class ElementCompositionPreviewMaker: MakeFromAbi {
    public typealias SwiftType = ElementCompositionPreview
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return ElementCompositionPreview(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class WindowsXamlManagerMaker: MakeFromAbi {
    public typealias SwiftType = WindowsXamlManager
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return WindowsXamlManager(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class XamlShutdownCompletedOnThreadEventArgsMaker: MakeFromAbi {
    public typealias SwiftType = XamlShutdownCompletedOnThreadEventArgs
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return XamlShutdownCompletedOnThreadEventArgs(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class XamlSourceFocusNavigationRequestMaker: MakeFromAbi {
    public typealias SwiftType = XamlSourceFocusNavigationRequest
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return XamlSourceFocusNavigationRequest(fromAbi: abi)
    }
}
@_spi(WinRTInternal)
public class XamlSourceFocusNavigationResultMaker: MakeFromAbi {
    public typealias SwiftType = XamlSourceFocusNavigationResult
    public static func from(abi: WindowsFoundation.IInspectable) -> SwiftType {
        return XamlSourceFocusNavigationResult(fromAbi: abi)
    }
}
